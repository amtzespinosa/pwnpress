package org.pwnpress.exploit;

import java.util.Scanner;
import org.pwnpress.framework.WPFrameworkSettings;

public class ExternalExploitationTools {
    public static void tools() {
        Scanner scanner = new Scanner(System.in);
        // printHelp();
        
        String url = null;
        if (WPFrameworkSettings.getConstantUrl() != null) {
        	url = WPFrameworkSettings.getConstantUrl();
        }

        while (true) {
        	System.out.print("\nPwnPress (exploit/external tools) > ");
            String command = scanner.nextLine();

            if (command.equalsIgnoreCase("exit")) {
                System.out.println("\nExiting PwnPress Framework. Goodbye and Happy Hacking!");
                break;
            } else if (command.equalsIgnoreCase("back")) {
                WPExploit.exploit();
                break;
            } else if (command.equalsIgnoreCase("verify")) {

            } else if (command.equalsIgnoreCase("sqlmap")) {
            	String[] parts = command.split("\\s+");
                if (parts.length == 1) {
                    if (url != null) {
                    	SQLMap.executeSQLMap(url);
                    } else {
                        System.out.println("Usage: sqlmap <url>");
                        System.out.println("You can also set a constant <url> in settings.");
                    }
                } else if (parts.length == 2) {
                    url = parts[1];
                    SQLMap.executeSQLMap(url);
                } else {
                	System.out.println("Usage: sqlmap <url>");
                }
            } else if (command.equalsIgnoreCase("zap")) {
            	String[] parts = command.split("\\s+");
                if (parts.length == 1) {
                    if (url != null) {
                    	// SQLMap.executeSQLMap(url);
                    } else {
                        System.out.println("Usage: zap <url>");
                        System.out.println("You can also set a constant <url> in settings.");
                    }
                } else if (parts.length == 2) {
                    url = parts[1];
                    // SQLMap.executeSQLMap(url);
                } else {
                	System.out.println("Usage: zap <url>");
                }
            } else if (command.equalsIgnoreCase("burpsuite")) {
            	String[] parts = command.split("\\s+");
                if (parts.length == 1) {
                    if (url != null) {
                    	// SQLMap.executeSQLMap(url);
                    } else {
                        System.out.println("Usage: burpsuite <url>");
                        System.out.println("You can also set a constant <url> in settings.");
                    }
                } else if (parts.length == 2) {
                    url = parts[1];
                    // SQLMap.executeSQLMap(url);
                } else {
                	System.out.println("Usage: burpsuite <url>");
                }
            } else if (command.equalsIgnoreCase("help")) {
                printHelp();
            } else {
                System.out.println("\nUnknown command. Type 'help' for available commands.");
            }
        }

        scanner.close();
    }

    private static void printHelp() {
        System.out.println("\nAvailable tools:\n");
        System.out.println("  sqlmap               - Use SQLMap to scan for SQLi vulnerabilities.");
        System.out.println("  zap                  - Use OWASP ZAP to scan for web vulnerabilities.");
        System.out.println("  burpsuite            - Use Burpsuite to scan for web vulnerabilities.");
        System.out.println();
        System.out.println("  back");
        System.out.println("  exit");
        System.out.println();
        System.out.println("Type 'help' to see available commands.");
    }
}
